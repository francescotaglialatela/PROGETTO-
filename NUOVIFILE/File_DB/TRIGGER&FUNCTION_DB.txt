--TRIGGER CHE VERIFICA LA CORREZIONE AUTOMATICA DELLE RISPOSTE APERTE NON DATE ASSEGNANDOLE COME CORRETTE 
create function verifica_correzione_auto() returns trigger as
$$
declare
	c1 cursor for(select studente
				  from risposte
				  where rispostaa is null and verificacorrezione=FALSE);
				 
	res risposte%rowtype;
begin
	open c1;
		loop
			fetch c1 into res;
				  
			UPDATE RISPOSTE
			SET VERIFICACORREZIONE= NOT VERIFICACORREZIONE
			WHERE Studente=res.Studente;
		exit when not found;
		end loop;
		close c1;
	
return null;
end;
$$ language plpgsql;

CREATE TRIGGER verifica_auto
AFTER INSERT ON RISPOSTE
EXECUTE PROCEDURE verifica_correzione_auto();

--TRIGGER CHE ASSEGNA ALLE RISPOSTE DATE AI QUIZ M IL PUNTEGGIO
--OPPORTUNO VERIFICANDO LA CORRETTEZZA DELLA RISPOSTA
create function correzione_qm_auto() returns trigger as
$$
declare 
	c1 cursor for (select *
				   from appoggio_trigger);
	
	r Punteggio_qm%rowtype;
begin
	open c1;
		loop
			fetch c1 into r;
				if r.RispostaM=r.RispostaC THEN
					UPDATE RISPOSTE
					SET PuntiQM =r.PuntC
					WHERE Studente=r.Studente;
				else
					UPDATE RISPOSTE
					SET puntiQM=r.PuntS
					WHERE Studente=r.Studente;
				end if;
					exit when not found;
		end loop;
	close c1;
return null;
end;
$$ language plpgsql;

create trigger correzione_automatica_rqm
after insert on risposte
execute procedure correzione_qm_auto();

--TRIGGER CHE CALCOLA IL PUNTEGGIO OTTENUTO AD UN TEST DA UNO STUDENTE
create function punteggio_stu() returns trigger as 
$$
declare 
c1 cursor for(select *
			 from calcolo_punteggi_test);
			 
r Risposte%rowtype;
sommapq real;
sommapa real;
totale real;

begin
	open c1;
		loop
			fetch c1 into r;
				if r.Studente= r.Studente then
					select sum(Puntiqm),sum(PunteggioAssegnato) into sommapq,sommapa
					from calcolo_punteggi_test
					where Studente=r.studente;
					
					totale:=sommapq+sommapa;
					
					update risposte
					set punteggiotot=totale
					where Studente = r.Studente;
				end if;
					exit when not found;
			end loop;
		close c1;
	return null;
end;
$$ language plpgsql;

create trigger calcolo_puntegiof
after insert on risposte
execute procedure punteggio_stu();