--TRIGGER CHE VERIFICA LA CORREZIONE AUTOMATICA DELLE RISPOSTE APERTE NON DATE ASSEGNANDOLE COME CORRETTE 
create function verifica_correzione_auto() returns trigger as
$$
declare
	c1 cursor for(select studente
				  from risposte
				  where rispostaa is null and verificacorrezione=FALSE);
				 
	res risposte%rowtype;
begin
	open c1;
		loop
			fetch c1 into res;
				  
			UPDATE RISPOSTE
			SET VERIFICACORREZIONE= NOT VERIFICACORREZIONE
			WHERE Studente=res.Studente;
		exit when not found;
		end loop;
		close c1;
	
return null;
end;
$$ language plpgsql;

CREATE TRIGGER verifica_auto
AFTER INSERT ON RISPOSTE
EXECUTE PROCEDURE verifica_correzione_auto();

--TRIGGER CHE ASSEGNA ALLE RISPOSTE DATE AI QUIZ M IL PUNTEGGIO
--OPPORTUNO VERIFICANDO LA CORRETTEZZA DELLA RISPOSTA
create function correzione_qm_auto() returns trigger as
$$
declare 
	c1 cursor for (select *
				   from appoggio_trigger);
	
	r appoggio_trigger%rowtype;
begin
	open c1;
		loop
			fetch c1 into r;
				if r.RispostaM=r.RispostaC THEN
					UPDATE RISPOSTE
					SET PuntiQM =r.PuntC
					WHERE Studente=r.Studente;
				else
					UPDATE RISPOSTE
					SET puntiQM=r.PuntS
					WHERE Studente=r.Studente;
				end if;
					exit when not found;
		end loop;
	close c1;
return null;
end;
$$ language plpgsql;

create trigger correzione_automatica_rqm
after insert on risposte
execute procedure correzione_qm_auto();

--PROCEDURE CHE CALCOLA IL PUNTEGGIO OTTENUTO AD UN TEST FORNENDO IL --NOME DELLO STUDENTE E IL NOME DEL TEST
create function punteggio_test(varchar,varchar) returns real as 
$$
declare
stud  alias for $1;
nomet  alias for $2;
matr int;
matr2 int;
punteggioqm real;
punteggioqa real;
risultato real;
begin
	SELECT idstudente into matr
	from studente
	where nome=stud;
	
	select studente into matr2
	from test_corretti
	where studente=matr;
	
	IF matr2 IS NULL THEN
		return NULL;
	ELSE
	SELECT sum(Puntiqm),sum(PunteggioAssegnato) into punteggioqm,punteggioqa
	from risposte as r,studente as s, test as t
	where   s.Nome=stud and s.idStudente=r.Studente and
		t.NomeTest=nomet and r.idTesT=t.idTest;
	END IF;	
		IF punteggioqa IS NULL THEN
			punteggioqa:=0;
		END IF;
		
		risultato:=punteggioqm+punteggioqa;
		
	return risultato;
end;
$$ language plpgsql;